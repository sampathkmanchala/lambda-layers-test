version: 0.2
env:
  variables:
    LAYER_ZIP: layer.zip
    HASH_FILE: requirements.hash
phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo "Upgrading pip..."
      - python -m pip install --upgrade pip
  pre_build:
    commands:
      - echo "Computing hash of requirements.txt"
      - md5sum requirements.txt > current.hash
      - |
        if [ -f $HASH_FILE ] && cmp -s current.hash $HASH_FILE; then
          echo "No changes in requirements.txt. Using cached layer."
          export LAYER_CHANGED=false
        else
          echo "requirements.txt changed. Rebuilding layer."
          cp current.hash $HASH_FILE
          export LAYER_CHANGED=true
        fi

  build:
    commands:
       -|
        if [ "$LAYER_CHANGED" = true ]; then
          echo "Installing dependencies into python/ directory"
          rm -rf python
          mkdir -p python
          pip install -r requirements.txt -t python/
          zip -r $LAYER_ZIP python
        fi
  post_build:
    commands:
      - |
        if [ "$LAYER_CHANGED" = true ]; then
          echo "Publishing new Lambda layer version"
          LAYER_VERSION=$(aws lambda publish-layer-version \
            --layer-name "$LAYER_NAME" \
            --compatible-runtimes "$PYTHON_VERSION" \
            --zip-file "fileb://$LAYER_ZIP" \
            --query 'Version' \
            --output text)
          echo "New layer version: $LAYER_VERSION"
        else
          echo "Getting latest published layer version"
          LAYER_VERSION=$(aws lambda list-layer-versions \
            --layer-name "$LAYER_NAME" \
            --query 'LayerVersions[0].Version' \
            --output text)
          echo "Reusing existing layer version: $LAYER_VERSION"
        fi
        - echo "Updating Lambda function to use layer version $LAYER_VERSION"
        - aws lambda update-function-configuration \
          --function-name "$LAMBDA_FUNCTION_NAME" \
          --layers "arn:aws:lambda:$AWS_REGION:$AWS_ACCOUNT_ID:layer:$LAYER_NAME:$LAYER_VERSION"
  artifacts:
    files:
      - layer.zip
      - requirements.hash

  cache:
    paths:
      - 'python/**/*'
      - 'requirements.hash'
